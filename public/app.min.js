'use strict';
// Declare app level module which depends on views, and components
angular.module('myApp', [
    'ui.router',
    'CustomDirectives',
    'Home',
	'Polls'// append more modules here
]).
config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise('/');
}]);

// @codekit-append "js/custom-directives.js"
// @codekit-append "js/developer.js"
// @codekit-append "pages/home/home.js"
// @codekit-append "pages/polls/polls.js"
// append more files here


angular.module('CustomDirectives', [])

.directive('equallySpaced', function() {
    return {
        restrict: 'A',
        link: function(scope, table, attrs){
            var tds = table.find("tr:first").find("th");
            var count = tds.length;
            tds.css("width", (table.width() / count)+"px");
        }
    };
})

.directive('size', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortWidth(attrs.size);
            elem.viewPortHeight(attrs.size);
        }
    };
})

.directive('width', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortWidth(attrs.width);
        }
    };
})

.directive('height', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            elem.viewPortHeight(attrs.height);
        }
    };
})

.directive('centerV', function() {
    return {
        restrict: 'A',
        link: function(scope, elem, attrs){
            center(elem);
            $(window).resize( function() {
                center(elem);
            });
            elem.resize( function() {
                center(elem);
            });
            function center(elem){
                var elemHeight = elem.height(),
                    parent = $(window),
                    parentHeight = parent.height(),
                    marginTop = (parentHeight - elemHeight) / 2;
                elem.css("margin-top",marginTop+"px");
            }
        }
    };
})
/*
* View-port font
* Set the size in vh and vw units in browsers that don't support vh and vw units
* */
.directive('vFont', function() {
    return {
        restrict: 'A',
        scope: {
            vh: '=vh',
            vw: '=vw'
        },
        link: function(scope, elem, attrs){
            if(scope.vh){
                var scrHeight = $(window).height();
                var px = (scrHeight * scope.vh) / 100;
                elem.css("font-size", px + "px");

                $(window).resize(function() {
                    var scrHeight = $(window).height();
                    var px = (scrHeight * scope.vh) / 100;
                    elem.css("font-size", px + "px");
                });
            }
            else if(scope.vw){
                var scrWidth = $(window).width();
                var px = (scrWidth * scope.vw) / 100;
                elem.css('font-size', px + "px");

                $(window).resize(function() {
                    var scrWidth = $(window).width();
                    var px = (scrWidth * scope.vw) / 100;
                    elem.css('font-size', px + "px");
                });
            }
        }
    };
});




'use strict';

angular.module('Home', ['ui.router'])

.config(['$stateProvider', function($stateProvider) {
    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/pages/home/home.html',
        controller: 'HomeCtrl'
    });
}])

.controller('HomeCtrl', ['$scope', function ( scope ) {
    $("#menu-today").showLoader();
}]);

'use strict';

angular.module('Polls', ['ui.router'])

.config(['$stateProvider', function($stateProvider) {
  $stateProvider.state('polls', {
    url: '/polls',
    templateUrl: '/pages/polls/polls.html',
    controller: 'PollsCtrl as polls'
  });
}])

.controller('PollsCtrl', ['$http',function($http) {

  // variables
  var c = this;
  c.deletePoll = deletePoll;
  c.createPoll = createPoll;

  // initialize
  getPolls();

  // implementation details

  function createPoll(){
    var poll = {
      title: "New Poll",
      choices: [{ title: "Yes" }, { title: "No" } ]
    };
    $http.post('/api/polls', poll).then(
        function (response) {
          c.polls = response.data;
        },
        function (error) {
          c.error = error.data;
        }
    );
  }

  function getPolls(){
    $http.get('/api/polls').then(
        function (response) {
          c.polls = response.data;
        },
        function (error) {
          c.error = error.data;
        }
    );
  }

  function deletePoll(id){
    $http.delete('/api/polls/'+id).then(
        function (response) {
          c.polls = response.data;
        },
        function (error) {
          c.error = error.data;
        }
    );
  }

}]);